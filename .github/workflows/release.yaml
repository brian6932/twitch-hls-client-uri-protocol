on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
    paths:
      - "**.rs"
      - "Cargo**"

name: Release

jobs:
  release:
    name: Release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            target-cpu: x86-64
            os: windows-latest
            bin-name: twitch-hls-client-uri-protocol.exe
            zip-name: x86_64-pc-windows-msvc

          - target: x86_64-pc-windows-msvc
            target-cpu: x86-64-v3
            os: windows-latest
            bin-name: twitch-hls-client-uri-protocol.exe
            zip-name: x86_64-v3-pc-windows-msvc

    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.target }}
          components: rust-src
      - name: Build
        shell: powershell
        run: $env:RUSTFLAGS="-Ctarget-cpu=${{ matrix.target-cpu }} -Zthreads=$env:NUMBER_OF_PROCESSORS -Zlocation-detail=none"; cargo +nightly build -Zbuild-std=std --release --target=${{ matrix.target }}
      - name: Move binary
        shell: powershell
        run: Move-Item "target/${{ matrix.target }}/release/${{ matrix.bin-name }}" .
      - name: Zip files
        uses: vimtor/action-zip@v1.2
        id: archive
        with:
          files: ${{ matrix.bin-name }}
          dest: twitch-hls-client-uri-protocol-${{ matrix.zip-name }}.zip
      - name: Upload archive
        uses: ncipollo/release-action@v1
        with:
          draft: true
          allowUpdates: true
          updateOnlyUnreleased: true
          artifactErrorsFailBuild: true
          artifacts: twitch-hls-client-uri-protocol-${{ matrix.zip-name }}.zip
          artifactContentType: application/zip
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
